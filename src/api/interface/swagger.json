{
  "swagger": "2.0",
  "host": "127.0.0.1:3001",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "info": {
    "title": "Central Ledger API Documentation",
    "version": "10.3.0"
  },
  "tags": [],
  "paths": {
    "/enums": {
      "get": {
        "operationId": "getEnums",
        "tags": [
          "enums"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/health": {
      "get": {
        "operationId": "getHealth",
        "tags": [
          "health"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "summary": "Prometheus metrics endpoint",
        "operationId": "getMetrics",
        "tags": [
          "metrics"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/participants": {
      "get": {
        "operationId": "getParticipants",
        "tags": [
          "participants"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "post": {
        "operationId": "postParticipants",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PostParticipantsRequest"
            }
          }
        ],
        "tags": [
          "participants"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/participants/limits": {
      "get": {
        "summary": "View limits for all participants",
        "operationId": "getParticipantsLimits",
        "parameters": [
          {
            "type": "string",
            "description": "Currency code",
            "enum": [
              "AED",
              "AFA",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "AOR",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EEK",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LTL",
              "LVL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XCD",
              "XDR",
              "XFO",
              "XFU",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "YER",
              "ZAR",
              "ZMK",
              "ZMW",
              "ZWD",
              "ZWL",
              "ZWN",
              "ZWR"
            ],
            "name": "currency",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Limit Type",
            "name": "type",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "participants"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/participants/{name}": {
      "get": {
        "operationId": "getParticipantsName",
        "parameters": [
          {
            "type": "string",
            "description": "Participant name",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "participants"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "put": {
        "operationId": "putParticipantsName",
        "parameters": [
          {
            "type": "string",
            "description": "Participant name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ParticipantIsActive"
            }
          }
        ],
        "tags": [
          "participants"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/participants/{name}/endpoints": {
      "get": {
        "summary": "View participant endpoints",
        "operationId": "getParticipantsNameEndpoints",
        "parameters": [
          {
            "type": "string",
            "description": "Name of the participant",
            "minLength": 2,
            "maxLength": 30,
            "x-format": {
              "alphanum": true
            },
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "participants"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "post": {
        "summary": "Add/Update participant endpoints",
        "operationId": "postParticipantsNameEndpoints",
        "parameters": [
          {
            "type": "string",
            "description": "Name of the participant",
            "minLength": 2,
            "maxLength": 30,
            "x-format": {
              "alphanum": true
            },
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PostParticipantsNameEndpointsRequest"
            }
          }
        ],
        "tags": [
          "participants"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/participants/{name}/limits": {
      "get": {
        "summary": "View participant limits",
        "operationId": "getParticipantsNameLimits",
        "parameters": [
          {
            "type": "string",
            "description": "Name of the participant",
            "minLength": 2,
            "maxLength": 30,
            "x-format": {
              "alphanum": true
            },
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Currency code",
            "enum": [
              "AED",
              "AFA",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "AOR",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EEK",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LTL",
              "LVL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XCD",
              "XDR",
              "XFO",
              "XFU",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "YER",
              "ZAR",
              "ZMK",
              "ZMW",
              "ZWD",
              "ZWL",
              "ZWN",
              "ZWR"
            ],
            "name": "currency",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Limit Type",
            "name": "type",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "participants"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "put": {
        "summary": "Adjust participant limits",
        "operationId": "putParticipantsNameLimits",
        "parameters": [
          {
            "type": "string",
            "description": "Name of the participant",
            "minLength": 2,
            "maxLength": 30,
            "x-format": {
              "alphanum": true
            },
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PutParticipantsNameLimitsRequest"
            }
          }
        ],
        "tags": [
          "participants"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/participants/{name}/positions": {
      "get": {
        "summary": "View participant positions",
        "operationId": "getParticipantsNamePositions",
        "parameters": [
          {
            "type": "string",
            "description": "Name of the participant",
            "minLength": 2,
            "maxLength": 30,
            "x-format": {
              "alphanum": true
            },
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Currency code",
            "enum": [
              "AED",
              "AFA",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "AOR",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EEK",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LTL",
              "LVL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XCD",
              "XDR",
              "XFO",
              "XFU",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "YER",
              "ZAR",
              "ZMK",
              "ZMW",
              "ZWD",
              "ZWL",
              "ZWN",
              "ZWR"
            ],
            "name": "currency",
            "in": "query"
          }
        ],
        "tags": [
          "participants"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/participants/{name}/accounts": {
      "get": {
        "summary": "View participant accounts and balances",
        "operationId": "getParticipantsNameAccounts",
        "parameters": [
          {
            "type": "string",
            "description": "Name of the participant",
            "minLength": 2,
            "maxLength": 30,
            "x-format": {
              "alphanum": true
            },
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "participants"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "post": {
        "summary": "Create hub accounts",
        "operationId": "postParticipantsNameAccounts",
        "parameters": [
          {
            "type": "string",
            "description": "Participant name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PostParticipantsNameAccountsRequest"
            }
          }
        ],
        "tags": [
          "participants"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/participants/{name}/initialPositionAndLimits": {
      "post": {
        "summary": "Add initial participant limits and position",
        "operationId": "postParticipantsNameInitialpositionandlimits",
        "parameters": [
          {
            "type": "string",
            "description": "Name of the participant",
            "minLength": 2,
            "maxLength": 30,
            "x-format": {
              "alphanum": true
            },
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PostInitialPositionAndLimitsRequest"
            }
          }
        ],
        "tags": [
          "participants"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/participants/{name}/accounts/{id}": {
      "post": {
        "summary": "Record Funds In or Out of participant account",
        "operationId": "postParticipantsNameAccountsId",
        "parameters": [
          {
            "type": "string",
            "description": "Name of the participant",
            "minLength": 2,
            "maxLength": 30,
            "x-format": {
              "alphanum": true
            },
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "x-constraint": {
              "positive": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Participants"
            }
          }
        ],
        "tags": [
          "participants"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "put": {
        "summary": "Update participant accounts",
        "operationId": "putParticipantsNameAccountsId",
        "parameters": [
          {
            "type": "string",
            "description": "Name of the participant",
            "minLength": 2,
            "maxLength": 30,
            "x-format": {
              "alphanum": true
            },
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "x-constraint": {
              "positive": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CurrencyIsActive"
            }
          }
        ],
        "tags": [
          "participants"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/participants/{name}/accounts/{id}/transfers/{transferId}": {
      "put": {
        "summary": "Record Funds In or Out of participant account",
        "operationId": "putParticipantsNameAccountsIdTransfersTransferid",
        "parameters": [
          {
            "type": "string",
            "description": "Name of the participant",
            "minLength": 2,
            "maxLength": 30,
            "x-format": {
              "alphanum": true
            },
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "x-constraint": {
              "positive": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "transferId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RecordFundsOut"
            }
          }
        ],
        "tags": [
          "participants"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/settlementModels" : {
      "get" : {
        "summary": "View all settlement models",
        "tags" : [ "settlementModels" ],
        "operationId" : "getSettlementmodels",
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "Successful",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "post" : {
        "summary": "Create a settlement model",
        "tags" : [ "settlementModels" ],
        "operationId" : "postSettlementmodels",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SettlementModel"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Successful",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/settlementModels/{name}" : {
      "get" : {
        "summary": "View settlement model by name",
        "tags" : [ "settlementModels" ],
        "operationId" : "getSettlementmodelsName",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "SettlementModel name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "Successful",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "put" : {
        "summary": "Update a settlement model",
        "tags" : [ "settlementModels" ],
        "operationId" : "putSettlementmodelsName",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "settlementModel name",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SettlementModelIsActive"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Successful",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/transactions/{id}": {
      "get": {
        "summary": "Retrieve transaction details by a transferId",
        "tags": [
          "transaction"
        ],
        "operationId": "getTransfer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Transfer Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/GetTransactionResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "PostParticipantsRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the participant",
          "minLength": 2,
          "maxLength": 30,
          "x-format": {
            "alphanum": true
          }
        },
        "currency": {
          "type": "string",
          "description": "Currency code",
          "$ref" : "#/definitions/Currency"

        }
      },
      "required": [
        "name"
      ]
    },
    "PostParticipantsNameEndpointsRequest": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Endpoint Type"
        },
        "value": {
          "type": "string",
          "description": "Endpoint Value"
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "Limit": {
      "type": "object",
      "description": "Participant Limit",
      "properties": {
        "type": {
          "type": "string",
          "description": "Limit Type"
        },
        "value": {
          "type": "number",
          "description": "Limit Value",
          "enum": [
            0
          ],
          "x-constraint": {
            "positive": true
          }
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "PostInitialPositionAndLimitsRequest": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string",
          "description": "Currency code",
          "$ref": "#/definitions/Currency"
        },
        "limit": {
          "$ref": "#/definitions/Limit"
        },
        "initialPosition": {
          "type": "number",
          "description": "Initial Position Value"
        }
      },
      "required": [
        "limit"
      ]
    },
    "PostParticipantsNameAccountsRequest": {
      "type": "object",
      "properties": {
        "currency": {
          "$ref": "#/definitions/Currency"
        },
        "type": {
          "type": "string",
          "description": "Account type"
        }
      },
      "required": [
        "type"
      ]
    },
    "NoAmountProvided": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "x-constraint": {
            "precision": 4,
            "positive": true
          }
        },
        "currency": {
          "type": "string",
          "description": "Currency code",
          "$ref": "#/definitions/Currency"
        }
      },
      "required": [
        "amount"
      ]
    },
    "Participants": {
      "type": "object",
      "properties": {
        "transferId": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "externalReference": {
          "type": "string"
        },
        "action": {
          "type": "string",
          "enum": [
            "recordFundsIn",
            "recordFundsOutPrepareReserve"
          ]
        },
        "reason": {
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/NoAmountProvided"
        },
        "extensionList": {
          "$ref": "#/definitions/ExtensionList"
        }
      },
      "required": [
        "transferId",
        "externalReference",
        "action",
        "reason",
        "amount"
      ]
    },
    "ParticipantIsActive": {
      "type": "object",
      "properties": {
        "isActive": {
          "type": "boolean",
          "description": "Participant isActive boolean"
        }
      },
      "required": [
        "isActive"
      ]
    },
    "ParticipantLimit": {
      "type": "object",
      "description": "Participant Limit",
      "properties": {
        "type": {
          "type": "string",
          "description": "Limit Type"
        },
        "value": {
          "type": "number",
          "description": "Limit Value"
        },
        "alarmPercentage": {
          "type": "number",
          "description": "limit threshold alarm percentage value"
        }
      },
      "required": [
        "type",
        "value",
        "alarmPercentage"
      ]
    },
    "PutParticipantsNameLimitsRequest": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string",
          "description": "Currency code",
          "$ref": "#/definitions/Currency"
        },
        "limit": {
          "$ref": "#/definitions/ParticipantLimit"
        }
      },
      "required": [
        "limit"
      ]
    },
    "CurrencyIsActive": {
      "type": "object",
      "properties": {
        "isActive": {
          "type": "boolean",
          "description": "Participant currency isActive boolean"
        }
      },
      "required": [
        "isActive"
      ]
    },
    "RecordFundsOut": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "enum": [
            "recordFundsOutCommit",
            "recordFundsOutAbort"
          ]
        },
        "reason": {
          "type": "string"
        }
      },
      "required": [
        "reason"
      ]
    },
    "SettlementModel" : {
      "type" : "object",
      "required" : [ "autoPositionReset", "ledgerAccountType", "name", "requireLiquidityCheck", "settlementDelay", "settlementGranularity", "settlementInterchange" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the settlement model",
          "minLength" : 2,
          "maxLength" : 30,
          "x-format" : {
            "alphanum" : true
          }
        },
        "settlementGranularity" : {
          "type" : "string",
          "description" : "Granularity type for the settlement model GROSS or NET",
          "enum" : [ "GROSS", "NET" ]
        },
        "settlementInterchange" : {
          "type" : "string",
          "description" : "Interchange type for the settlement model BILATERAL or MULTILATERAL",
          "enum" : [ "BILATERAL", "MULTILATERAL" ]
        },
        "settlementDelay" : {
          "type" : "string",
          "description" : "Delay type for the settlement model IMMEDIATE or DEFERRED",
          "enum" : [ "DEFERRED", "IMMEDIATE" ]
        },
        "currency" : {
          "$ref": "#/definitions/Currency",
          "description" : "Currency code"
        },
        "requireLiquidityCheck" : {
          "type" : "boolean",
          "description" : "Liquidity Check boolean"
        },
        "ledgerAccountType" : {
          "type" : "string",
          "description" : "Account type for the settlement model POSITION, SETTLEMENT or INTERCHANGE_FEE",
          "enum" : [ "INTERCHANGE_FEE", "POSITION" ]
        },
        "autoPositionReset" : {
          "type" : "boolean",
          "description" : "Automatic position reset setting, which determines whether to execute the settlement transfer or not"
        }
      }
    },
    "SettlementModelIsActive" : {
      "type" : "object",
      "required" : [ "isActive" ],
      "properties" : {
        "isActive" : {
          "type" : "boolean",
          "description" : "settlementModel isActive boolean"
        }
      }
    },
    "GetTransactionResponse": {
      "title": "GetTransactionResponse",
      "type": "object",
      "description": "GET /transaction/{id} response object",
      "properties": {
        "quoteId": {
          "$ref": "#/definitions/QuoteId",
          "description": "Common id between the FSPs for the quote object, decided by the Payer FSP. The id should be reused for resends of the same quote for a transaction. A new id should be generated for each new quote for a transaction."
        },
        "transactionId": {
          "$ref": "#/definitions/TransactionId",
          "description": "Common id (decided by the Payer FSP) between the FSPs for the future transaction object. The actual transaction will be created as part of a successful transfer process. The id should be reused for resends of the same quote for a transaction. A new id should be generated for each new quote for a transaction."
        },
        "transactionRequestId": {
          "type": "string",
          "description": "Identifies an optional previously-sent transaction request."
        },
        "payee": {
          "$ref": "#/definitions/Party",
          "description": "Information about the Payee in the proposed financial transaction."
        },
        "payer": {
          "$ref": "#/definitions/Party",
          "description": "Information about the Payer in the proposed financial transaction."
        },
        "amount": {
          "$ref": "#/definitions/Money",
          "description": "Depending on amountType. If SEND - The amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees. The amount is updated by each participating entity in the transaction. If RECEIVE - The amount the Payee should receive, that is, the amount that should be sent to the receiver exclusive any fees. The amount is not updated by any of the participating entities."
        },
        "transactionType": {
          "$ref": "#/definitions/TransactionType",
          "description": "Type of transaction for which the quote is requested."
        },
        "note": {
          "type": "string",
          "description": "A memo that will be attached to the transaction."
        },
        "extensionList": {
          "$ref": "#/definitions/ExtensionList",
          "description": "Optional extension, specific to deployment."
        }
      }
    },
    "QuoteId": {
      "title": "QuoteId",
      "type": "string",
      "minLength": 1,
      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
      "description": "Quote Identifier. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to RFC 4122, that is restricted by a regular expression for interoperability reasons. An UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘). A minLength of 1 has been specified due to the regex not being validated on empty strings, this should be removed once the enjoi module has been fixed."
    },
    "TransactionId": {
      "title": "TransactionId",
      "type": "string",
      "minLength": 1,
      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
      "description": "Transaction Identifier. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to RFC 4122, that is restricted by a regular expression for interoperability reasons. An UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘). A minLength of 1 has been specified due to the regex not being validated on empty strings, this should be removed once the enjoi module has been fixed."
    },
    "Party": {
      "title": "Party",
      "type": "object",
      "description": "Data model for the complex type Party.",
      "properties": {
        "partyIdInfo": {
          "$ref": "#/definitions/PartyIdInfo",
          "description": "Party Id type, id, sub id or type, and FSP Id."
        },
        "merchantClassificationCode": {
          "type": "string",
          "description": "Used in the context of Payee Information, where the Payee happens to be a merchant accepting merchant payments."
        },
        "name": {
          "type": "string",
          "description": "Display name of the Party, could be a real name or a nick name."
        },
        "personalInfo": {
          "$ref": "#/definitions/PartyPersonalInfo",
          "description": "Personal information used to verify identity of Party such as first, middle, last name and date of birth."
        }
      },
      "required": [
        "partyIdInfo"
      ]
    },
    "PartyIdInfo": {
      "title": "PartyIdInfo",
      "type": "object",
      "description": "Data model for the complex type PartyIdInfo.",
      "properties": {
        "partyIdType": {
          "$ref": "#/definitions/PartyIdType",
          "description": "Type of the identifier."
        },
        "partyIdentifier": {
          "$ref": "#/definitions/PartyIdentifier",
          "description": "An identifier for the Party."
        },
        "partySubIdOrType": {
          "type": "string",
          "description": "A sub-identifier or sub-type for the Party."
        },
        "fspId": {
          "type": "string",
          "description": "FSP id (if known)"
        },
        "extensionList": {
          "$ref": "#/definitions/ExtensionList",
          "description": "Optional extension, specific to deployment."
        }
      },
      "required": [
        "partyIdType",
        "partyIdentifier"
      ]
    },
    "PartyIdType": {
      "title": "PartyIdTypeEnum",
      "type": "string",
      "enum": [
        "MSISDN",
        "EMAIL",
        "PERSONAL_ID",
        "BUSINESS",
        "DEVICE",
        "ACCOUNT_ID",
        "IBAN",
        "ALIAS"
      ],
      "description": "Below are the allowed values for the enumeration - MSISDN An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the ITU-T E.164 standard. Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix. - EMAIL An email is used as reference to a participant. The format of the email should be according to the informational RFC 3696. - PERSONAL_ID A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element. - BUSINESS A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used. - DEVICE A specific device (for example, a POS or ATM) id connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element. - ACCOUNT_ID A bank account number or FSP account id should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP. - IBAN A bank account number or FSP account id is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace. - ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
    },
    "PartyIdentifier": {
      "title": "PartyIdentifier",
      "type": "string",
      "minLength": 1,
      "maxLength": 128,
      "description": "Identifier of the Party."
    },
    "ExtensionList": {
      "title": "ExtensionList",
      "type": "object",
      "description": "Data model for the complex type ExtensionList",
      "properties": {
        "extension": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "minItems": 1,
          "maxItems": 16,
          "description": "Number of Extension elements"
        }
      },
      "required": [
        "extension"
      ]
    },
    "Extension": {
      "title": "Extension",
      "type": "object",
      "description": "Data model for the complex type Extension",
      "properties": {
        "key": {
          "type": "string",
          "description": "Extension key."
        },
        "value": {
          "type": "string",
          "description": "Extension value."
        }
      },
      "required": [
        "key",
        "value"
      ]
    },
    "PartyPersonalInfo": {
      "title": "PartyPersonalInfo",
      "type": "object",
      "description": "Data model for the complex type PartyPersonalInfo.",
      "properties": {
        "complexName": {
          "$ref": "#/definitions/PartyComplexName",
          "description": "First, middle and last name for the Party."
        },
        "dateOfBirth": {
          "type": "string",
          "description": "Date of birth for the Party."
        }
      }
    },
    "PartyComplexName": {
      "title": "PartyComplexName",
      "type": "object",
      "description": "Data model for the complex type PartyComplexName.",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "Party’s first name."
        },
        "middleName": {
          "type": "string",
          "description": "Party’s middle name."
        },
        "lastName": {
          "type": "string",
          "description": "Party’s last name."
        }
      }
    },
    "TransactionType": {
      "title": "TransactionType",
      "type": "object",
      "description": "Data model for the complex type TransactionType.",
      "properties": {
        "scenario": {
          "type": "string",
          "description": "Deposit, withdrawal, refund, …"
        },
        "subScenario": {
          "type": "string",
          "description": "Possible sub-scenario, defined locally within the scheme."
        },
        "initiator": {
          "type": "string",
          "description": "Who is initiating the transaction - Payer or Payee"
        },
        "initiatorType": {
          "type": "string",
          "description": "Consumer, agent, business, …"
        },
        "refundInfo": {
          "$ref": "#/definitions/Refund",
          "description": "Extra information specific to a refund scenario. Should only be populated if scenario is REFUND"
        },
        "balanceOfPayments": {
          "type": "string",
          "description": "Balance of Payments code."
        }
      },
      "required": [
        "scenario",
        "initiator",
        "initiatorType"
      ]
    },
    "Refund": {
      "title": "Refund",
      "type": "object",
      "description": "Data model for the complex type Refund.",
      "properties": {
        "originalTransactionId": {
          "type": "string",
          "description": "Reference to the original transaction id that is requested to be refunded."
        },
        "refundReason": {
          "type": "string",
          "description": "Free text indicating the reason for the refund."
        }
      },
      "required": [
        "originalTransactionId"
      ]
    },
    "Money": {
      "title": "Money",
      "type": "object",
      "description": "Data model for the complex type Money.",
      "properties": {
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Currency of the amount."
        },
        "amount": {
          "$ref": "#/definitions/Amount",
          "description": "Amount of Money."
        }
      },
      "required": [
        "currency",
        "amount"
      ]
    },
    "Currency": {
      "title": "CurrencyEnum",
      "description": "The currency codes defined in ISO 4217 as three-letter alphabetic codes are used as the standard naming representation for currencies.",
      "type": "string",
      "minLength": 3,
      "maxLength": 3,
      "enum": [
        "AED",
        "AFN",
        "ALL",
        "AMD",
        "ANG",
        "AOA",
        "ARS",
        "AUD",
        "AWG",
        "AZN",
        "BAM",
        "BBD",
        "BDT",
        "BGN",
        "BHD",
        "BIF",
        "BMD",
        "BND",
        "BOB",
        "BRL",
        "BSD",
        "BTN",
        "BWP",
        "BYN",
        "BZD",
        "CAD",
        "CDF",
        "CHF",
        "CLP",
        "CNY",
        "COP",
        "CRC",
        "CUC",
        "CUP",
        "CVE",
        "CZK",
        "DJF",
        "DKK",
        "DOP",
        "DZD",
        "EGP",
        "ERN",
        "ETB",
        "EUR",
        "FJD",
        "FKP",
        "GBP",
        "GEL",
        "GGP",
        "GHS",
        "GIP",
        "GMD",
        "GNF",
        "GTQ",
        "GYD",
        "HKD",
        "HNL",
        "HRK",
        "HTG",
        "HUF",
        "IDR",
        "ILS",
        "IMP",
        "INR",
        "IQD",
        "IRR",
        "ISK",
        "JEP",
        "JMD",
        "JOD",
        "JPY",
        "KES",
        "KGS",
        "KHR",
        "KMF",
        "KPW",
        "KRW",
        "KWD",
        "KYD",
        "KZT",
        "LAK",
        "LBP",
        "LKR",
        "LRD",
        "LSL",
        "LYD",
        "MAD",
        "MDL",
        "MGA",
        "MKD",
        "MMK",
        "MNT",
        "MOP",
        "MRO",
        "MUR",
        "MVR",
        "MWK",
        "MXN",
        "MYR",
        "MZN",
        "NAD",
        "NGN",
        "NIO",
        "NOK",
        "NPR",
        "NZD",
        "OMR",
        "PAB",
        "PEN",
        "PGK",
        "PHP",
        "PKR",
        "PLN",
        "PYG",
        "QAR",
        "RON",
        "RSD",
        "RUB",
        "RWF",
        "SAR",
        "SBD",
        "SCR",
        "SDG",
        "SEK",
        "SGD",
        "SHP",
        "SLL",
        "SOS",
        "SPL",
        "SRD",
        "STD",
        "SVC",
        "SYP",
        "SZL",
        "THB",
        "TJS",
        "TMT",
        "TND",
        "TOP",
        "TRY",
        "TTD",
        "TVD",
        "TWD",
        "TZS",
        "UAH",
        "UGX",
        "USD",
        "UYU",
        "UZS",
        "VEF",
        "VND",
        "VUV",
        "WST",
        "XAF",
        "XCD",
        "XDR",
        "XOF",
        "XPF",
        "YER",
        "ZAR",
        "ZMW",
        "ZWD"
      ]
    },
    "Amount": {
      "title": "Amount",
      "type": "string",
      "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
      "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed."
    }
  }
}
